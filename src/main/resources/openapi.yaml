openapi: 3.0.3
info:
  title: Todo API
  version: 1.0.0
servers:
  - url: http://localhost:8080
paths:
  /todos:
    get:
      operationId: listTodos
      summary: List todos
      parameters:
        - in: query
          name: page
          description: Zero-based page index (0..N)
          required: false
          schema:
            type: integer
            minimum: 0
            default: 0
        - in: query
          name: size
          description: The size of the page to be returned
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 50
            default: 20
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items: { $ref: '#/components/schemas/Todo' }
    post:
      operationId: createTodo
      summary: Create todo
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/TodoCreate' }
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema: { $ref: '#/components/schemas/Todo' }
  /todos/{id}:
    parameters:
      - in: path
        name: id
        required: true
        schema: { type: string, format: uuid }

    get:
      operationId: getTodo
      summary: Get specific todo
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: { $ref: '#/components/schemas/Todo' }
        '404':
          description: Not Found
    put:
      operationId: updateTodo
      summary: Update specific todo
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/TodoUpdate' }
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: { $ref: '#/components/schemas/Todo' }
        '404':
          description: Not Found
    patch:
      operationId: patchTodo
      summary: Patch specific todo
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/TodoPatch' }
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: { $ref: '#/components/schemas/Todo' }
        '404':
          description: Not Found
    delete:
      operationId: deleteTodo
      summary: Delete a specific todo
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
components:
  schemas:
    Todo:
      type: object
      required: [id, title, completed]
      properties:
        id:    { type: string, format: uuid }
        title: { type: string, minLength: 1 }
        completed:  { type: boolean }
    TodoCreate:
      type: object
      required: [title]
      properties:
        title: { type: string, minLength: 1 }
    TodoUpdate:
      type: object
      required: [title, completed]
      properties:
        title: { type: string, minLength: 1 }
        completed:  { type: boolean }
    TodoPatch:
      type: object
      required: []
      properties:
        title: { type: string, minLength: 1 }
        completed:  { type: boolean }
